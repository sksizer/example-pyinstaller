name: Build Executables
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Poetry (Windows)
      if: runner.os == 'Windows'
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
        echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      shell: pwsh
        
    - name: Install Poetry (Unix)
      if: runner.os != 'Windows'
      uses: snok/install-poetry@v1
      
    - name: Install dependencies
      if: runner.os != 'Windows'
      run: poetry install

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        $env:PATH = "$env:APPDATA\Python\Scripts;$env:PATH"
        poetry install
      shell: pwsh
        
    - name: Build executable
      if: runner.os != 'Windows'
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        poetry run pyinstaller src/example_pyinstaller/main.py --workpath=build --distpath=dist --onefile

    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{ github.workspace }}
      run: |
        $env:PATH = "$env:APPDATA\Python\Scripts;$env:PATH"
        poetry run pyinstaller src/example_pyinstaller/main.py --workpath=build --distpath=dist --onefile
      shell: pwsh
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-executable
        path: dist/